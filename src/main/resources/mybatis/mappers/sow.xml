<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sboot.pro.argus.dao.SowDAO">
	<!-- sow 일일 추가 (정보저장) - 게시판 없을 시 추가 -->
	<insert id="insertSowDailyWorkLogList" parameterType="sowVO">
		<foreach collection="sowDailyWorkLogList" item="item">
			insert into sowDailyWorkLog(sowDWL_name, sowDWL_work_name, sowDWL_shift, sowDWL_hours, sowDWL_overtime, work_date, login_area)
			values (#{item.sowDWL_name}, #{item.sowDWL_work_name}, #{item.sowDWL_shift}, #{item.sowDWL_hours}, #{item.sowDWL_overtime}, #{work_date}, #{searchArea});
		</foreach>
	</insert>
	
	<insert id="insertSowDailyWorkLogBoard" parameterType="String">
		insert into sowDailyWorkLog_board(board_title, work_date, board_area)
		values(concat(#{work_date},'보고서'), #{work_date}, #{searchArea});
	</insert>
	
	<!-- sow 일일 추가 폼 (작업목록 가져오기)-->
	<select id="selectWorkName" parameterType="String" resultType="sowVO">
		select fmonth_name from followingMonth where login_area = #{searchArea}
	</select>
	
	<!-- 직원 목록 -->
	<select id="selectEmployeeList" parameterType="String" resultType="sowVO">
		select * from employee where login_area = #{searchArea} and YN = 'Y'
	</select>
	
	<!-- 직원 등록(정보저장) -->	
	<insert id="insertEmployee" parameterType="String">
		insert into employee(emp_name, emp_position, login_area) values (#{emp_name}, #{emp_position}, #{searchArea});
	</insert>
	
	<!-- 직원 수정 -->
	<update id="updateEmployee" parameterType="sowVO">
		update employee
		set emp_name = #{emp_name},
		emp_position = #{emp_position}
		where emp_num = #{dummyInt}
	</update>
	
	<update id="deleteEmployee" parameterType="int">
		update employee
		set YN = 'N'
		where emp_num = #{dummyInt}
	</update>
	
	<!-- sow 일일 보기 -->
	<select id="selectViewList" parameterType="String" resultType="sowVO">
		select * from sowDailyWorkLog where login_area = #{searchArea} and work_date = #{work_date}
	</select>
	
	<!-- sow 추가시간 계산 -->
	<select id="selectSumOverTime" parameterType="String" resultType="sowVO">
		select sum(sowDWL_overtime) as dummyInt from sowDailyWorkLog where login_area = #{searchArea}
		and work_date between #{searchDate} and #{work_date} group by sowDWL_name;
	</select>
	
	<!-- sow 주야구분 추가시간 계산 -->
	<select id="selectDayNightOvertime">
		select sowDWL_shift, sowDWL_work_name, sum(sowDWL_overtime), sum(sowDWL_hours) from sowdailyworklog where login_area = #{searchArea} and work_date between #{start_date} and #{work_date}
		group by sowDWL_shift, sowDWL_work_name having sowDWL_shift='주' or sowDWL_shift='야';
	</select>

	<!-- sow 정보저장 이름있는 form만 length만큼 반복문 돌리기 위한 count -->
	<select id="countNameLength" parameterType="String" resultType="int">
		select count(*) from employee where login_area = #{searchArea}
	</select>

</mapper>